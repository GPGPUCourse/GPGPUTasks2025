#version 450

#include <libgpu/vulkan/vk/common.vk>

#include "../defines.h"

layout (std430, binding = 0) readonly buffer MatrixIn   { float matrix[];            };
layout (std430, binding = 1)          buffer MatrixOut  { float transposed_matrix[]; };

layout (push_constant) uniform PushConstants {
    uint w;
    uint h;
} params;

layout (local_size_x = GROUP_SIZE_X, local_size_y = GROUP_SIZE_Y) in;
void main()
{
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    if (x >= params.w || y >= params.h) return;

    transposed_matrix[x * params.h + y] = matrix[y * params.w + x];
}
